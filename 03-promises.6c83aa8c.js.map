{"mappings":"AAmBA,SAASA,EAAcC,EAAUC,GACTC,KAAKC,SAC3B,OAAO,IAAIC,QAAQC,QAASC,O,CArBjBC,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAyBC,GACvBA,EAAIC,iBACJ,MAAQV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAClD,IAAK,MAAMC,EAAI,EAAGA,GAAKH,EAAQG,IAC7BC,YAAW,KAAQnB,EAAckB,EAAGL,EAAM,GAAIA,GAASK,EAAI,GAAKJ,GACjEM,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,QAAQC,IAAI,uBAAqBrB,QAAiBC,MAAU,IAE7DqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBmB,QAAQC,IAAI,sBAAoBrB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector(`.form`);\n\nform.addEventListener(`submit`, startGeneration);\n\nfunction startGeneration(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n  for (const i = 1; i <= amount; i++) {\n    setTimeout(() => { createPromise(i, delay) }, delay + (i - 1) * step)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise(resolve, reject)\n  {\n    if (shouldResolve) {\n      resolve;\n  } else {\n      reject;\n    }\n  }\n}\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Math","random","Promise","resolve","reject","document","querySelector","addEventListener","evt","preventDefault","delay1","step","amount","currentTarget","elements","i","setTimeout","then","console","log","catch"],"version":3,"file":"03-promises.6c83aa8c.js.map"}