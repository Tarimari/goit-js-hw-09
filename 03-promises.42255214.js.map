{"mappings":"AAcA,SAASA,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACT,IAAIC,SAAQ,CAACC,EAASC,KAChBN,EACFK,EAAQ,CAAEE,SAAAT,EAAUU,MAAAT,IAEpBO,EAAO,CAAEC,SAAAT,EAAUU,MAAAT,GAAQ,IAI9BU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBE,QAAQC,IAAI,uBAAqBJ,QAAiBC,MAAU,IAE7DI,OAAM,EAACL,SAAEA,EAAQC,MAAEA,MAClBE,QAAQC,IAAI,sBAAoBJ,QAAeC,MAAU,GACzD,GAEFT,E,CAhCSc,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAyBC,GACvBA,EAAIC,iBACJ,IAAIT,MAAEA,EAAKU,KAAEA,EAAIC,OAAEA,GAAWH,EAAII,cAAcC,SAChD,IAAK,IAAId,EAAW,EAAGA,GAAYY,EAAOG,cAAef,IAAY,CACnE,IAAIgB,EAAShB,EAAWW,EAAKM,MAAQN,EAAKM,MAAQhB,EAAMc,cACxDzB,EAAcU,EAAUgB,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector(`.form`);\n\nform.addEventListener(`submit`, startGeneration);\n\nfunction startGeneration(evt) {\n  evt.preventDefault();\n  let { delay, step, amount } = evt.currentTarget.elements;\n  for (let position = 1; position <= amount.valueAsNumber; position++) {\n    let delayX = position * step.value - step.value + delay.valueAsNumber;\n    createPromise(position, delayX)\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    })\n  \n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    })\n  },\n    delay\n  );\n  \n}\n"],"names":["$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","setTimeout","Promise","resolve","reject","position","delay","then","console","log","catch","document","querySelector","addEventListener","evt","preventDefault","step","amount","currentTarget","elements","valueAsNumber","delayX","value"],"version":3,"file":"03-promises.42255214.js.map"}