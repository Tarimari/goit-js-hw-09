{"mappings":"AAAaA,SAASC,cAAe,SAEhCC,iBAAkB,UAEvB,SAAyBC,G,kBAIrBC,YAAW,WAYSC,KAAKC,SACpB,IAAIC,QAAQC,QAASC,O,GAboBC,GAASC,EAAI,GAAKC,GACjEC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACjBC,QAAQC,IAAI,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAE3DI,OAAM,SAAAN,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAClBC,QAAQC,IAAI,sBAAqCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,KARzDb,EAAIkB,iBAEJ,IADA,IAAgCC,EAAAnB,EAAIoB,cAAcC,SAA1Cd,EAAwBY,EAAxBN,MAAOJ,EAAiBU,EAAjBV,KAAMa,EAAWH,EAAXG,OACVC,EAAI,EAAGA,GAAKD,EAAQC,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector(`.form`);\n\nform.addEventListener(`submit`, startGeneration);\n\nfunction startGeneration(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n  for (const i = 1; i <= amount; i++) {\n    setTimeout(() => { createPromise(i, delay) }, delay + (i - 1) * step)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise(resolve, reject)\n  {\n    if (shouldResolve) {\n      resolve;\n  } else {\n      reject;\n    }\n  }\n}\n"],"names":["document","querySelector","addEventListener","evt","setTimeout","Math","random","Promise","resolve","reject","delay1","i","step","then","param","position","delay","console","log","concat","catch","preventDefault","_elements","currentTarget","elements","amount","i1","_loop"],"version":3,"file":"03-promises.697bd3de.js.map"}